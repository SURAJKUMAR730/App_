import React, { useState } from 'react';
import {
  View,
  Text,
  ScrollView,
  TouchableOpacity,
  StyleSheet,
  Switch,
  useColorScheme,
} from 'react-native';

const faqs = [
  {
    question: 'How do I reset my password?',
    answer: 'Go to settings > Account > Reset Password and follow the instructions.',
  },
  {
    question: 'How can I contact support?',
    answer: 'You can reach out to our support team via the "Contact Us" section.',
  },
  {
    question: 'Is internet required to use this app?',
    answer: 'Yes, an internet connection is required for most features.',
  },
  {
    question: 'Can I use the app on multiple devices?',
    answer: 'Yes, just log in using the same account on each device.',
  },
  {
    question: 'How do I delete my account?',
    answer: 'Go to settings > Account > Delete Account. Follow the prompts.',
  },
];

const HelpAndFAQ = () => {
  const systemTheme = useColorScheme(); // system default
  const [manualTheme, setManualTheme] = useState(null); // null = system, true = dark, false = light
  const isDark = manualTheme === null ? systemTheme === 'dark' : manualTheme;

  const [activeIndex, setActiveIndex] = useState(null);
  const styles = getStyles(isDark);

  const toggleFAQ = (index) => {
    setActiveIndex(activeIndex === index ? null : index);
  };

  const toggleTheme = () => {
    setManualTheme((prev) =>
      prev === null ? systemTheme !== 'dark' : !prev
    );
  };

  return (
    <ScrollView style={styles.container}>
      <View style={styles.toggleContainer}>
        <Text style={styles.toggleText}>Dark Mode</Text>
        <Switch
          value={isDark}
          onValueChange={toggleTheme}
          trackColor={{ false: '#ccc', true: '#2196F3' }}
          thumbColor={isDark ? '#fff' : '#f4f3f4'}
        />
      </View>

      <Text style={styles.header}>FAQs</Text>

      {faqs.map((item, index) => (
        <TouchableOpacity key={index} onPress={() => toggleFAQ(index)} style={styles.faqBox}>
          <Text style={styles.question}>{item.question}</Text>
          {activeIndex === index && (
            <Text style={styles.answer}>{item.answer}</Text>
          )}
        </TouchableOpacity>
      ))}
    </ScrollView>
  );
};

export default HelpAndFAQ;

const getStyles = (isDark) =>
  StyleSheet.create({
    container: {
      flex: 1,
      padding: 16,
      backgroundColor: isDark ? '#0e0e0e' : '#ebebeb', // Black / Tertiary
    },
    toggleContainer: {
      flexDirection: 'row',
      alignItems: 'center',
      justifyContent: 'flex-end',
      marginBottom: 10,
    },
    toggleText: {
      marginRight: 10,
      fontSize: 16,
      fontFamily: 'NexaBook', // or Nexa Regular
      color: isDark ? '#fff' : '#0e0e0e',
    },
    header: {
      fontSize: 26,
      fontFamily: 'NexaBold',
      color: '#1874ed', // Primary
      textAlign: 'center',
      marginBottom: 20,
    },
    faqBox: {
      backgroundColor: isDark ? '#1E1E1E' : '#fff',
      borderWidth: 1,
      borderColor: '#1874ed', // Primary
      borderRadius: 10,
      padding: 14,
      marginBottom: 15,
      elevation: 2,
      shadowColor: '#000',
      shadowOffset: { width: 0, height: 2 },
      shadowOpacity: 0.1,
      shadowRadius: 2,
    },
    question: {
      fontSize: 18,
      fontFamily: 'NexaRegular',
      color: '#1874ed', // Primary
      fontWeight: 'bold',
    },
    answer: {
      marginTop: 8,
      fontSize: 16,
      fontFamily: 'NexaLight',
      color: isDark ? '#ccc' : '#0e0e0e', // Light gray or Black
    },
  });
